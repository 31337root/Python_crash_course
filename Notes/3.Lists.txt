*** Lists ***

A list is a collection of items in a particular order. you can make a list that
includes the letters of the alphabet, the digits from 0-9, or the names of all
the people in your family.

In Python, square brackets ([]) indicate a list, and individual elements in the
list are separated by commas. Here's a simple example of a list that contains
a few kinds oof bicycles:

	bicycles = ['trek', 'cannondale', 'redline', 'specialized']
	print(bicycles)

	>>> ['trek', 'cannondale', 'redline', 'specialized']

--- Accesing elements in a list ---

Lists are ordered collections, so ypu can access any element in a list by
telling Python he position, or index, of the item desired.

	bicycles = ['trek', 'cannondale', 'redline', 'specialized']
        print(bicycles[0])

	>>> trek

Python has a special syntax for accessing tthe las element in a list. By asking
for the item at index -1, Python always returns tthe las item in the list:

	bicycles = ['trek', 'cannondale', 'redline', 'specialized']
        print(bicycles[-1])

        >>> specialized

The index -2 returns the second item from the end of the listt, the index -3
returns the third itetm from the end, and so forth.

--- Using the range() function ---

Python's range() function makes it easy to generate a series of numbers. For 
example, you can use the range() function to print a series of numbers like this

	for value in range(1,5):
		print(value)

--- List comprehensions ---

Tthe approach described earlier for generating the list squares consisted of 
using three or four lines of code. A list comprehension allows you tto generate
the same list in just one line of code. A list comprehension combines the 
appends each new element.

The following example builds the same list of square numbers you saw earlier
but uses a list comprehension:

	squares = [value**2 for value in range(1, 11)]
	print(squares)

--- Slicing a list ---

To make a slice, you specify the index of the first and las elements you want
to work with. As with the range() function, Python stops one item before the
second index you specify. To output the first three elements in a list, you
would request indices 0 through 3, wich could return elements 0, 1, and 2.

The folloring example involves a list of players on a team:

	players = ['charles', 'martina', 'michael', 'florence', 'eli']
	print(players[0:3])


